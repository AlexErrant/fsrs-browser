name: main

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    - name: Check out
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install Rust nightly
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: nightly-2023-12-21
        components: rustfmt,clippy
        targets: wasm32-unknown-unknown

    - name: Add rust-src
      run: rustup component add rust-src --toolchain nightly-2023-12-21-x86_64-unknown-linux-gnu

    - name: Set up cargo cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-

    - name: Run checks
      run: ./check.sh

    - name: Build
      run: ./prod.sh

    - name: Prepublish
      run: ./prepublish.sh

    - name: Publish
      uses: JS-DevTools/npm-publish@v3
      with:
        token: ${{ secrets.NPM_TOKEN }}
        package: pkg

    - name: Compute tag
      id: compute-tag
      run: |
        set -e
        TAG=$(cat Cargo.toml \
          | grep --extended-regexp "^version =" \
          | grep --extended-regexp --only-matching "[0-9]+\.[0-9]+.[0-9]+[-\.\+a-zA-Z0-9]*" \
          | head --lines=1)
        echo "tag=v$TAG" >> "$GITHUB_OUTPUT"

    - name: Tag repo using version specified in Cargo.toml
      uses: djordon/git-autotag-action@v0.7.0-beta2
      with:
        tag: ${{ steps.compute-tag.outputs.tag }}
